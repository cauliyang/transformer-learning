[tool.poetry]
name = "transformer-learning"
version = "0.1.0"
description = ""
authors = ["Yangyang Li <yangyang.li@northwestern.edu>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
rich = "^13.5.2"
pandas = "1.3.5"
torch = { version = "2.0.1" }
torchtext = "*"
spacy = "*"
altair = "*"
jupytext = "*"
flake8 = "*"
black = "*"
GPUtil = "*"
wandb = "*"


[tool.poetry.scripts]
"examples" = "transformer_learning.example:main"

[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.13"


[tool.ruff]
select = [
    "A",
    "F",
    "E",
    "W",
    "C90",
    "I",
    "UP",
    "N",
    "YTT",
    "TID",
    "S",
    "BLE",
    "FBT",
    "PLR",
    "B",
    "B9",
    "A",
    "C4",
    "T10",
    "EM",
    "ICN",
    "T20",
    "Q",
    "RET",
    "SIM",
    "ARG",
    "DTZ",
    "ERA",
    "PD",
    "PGH",
    "PLC",
    "PLE",
    "PLW",
    "RUF",
    "PL",
    "TD",
    "FIX",
    "PTH",
    "TCH",
    "SLOT",
    "PT",
    "PYI",
    "PIE",
    "ISC",
    "FA",
    "EXE",
    "CPY",
    "COM",
]
line-length = 130
exclude = ["tests", "cppext", "blat.py"]
ignore = [
    "ANN001",
    "D203",
    "D213",
    "PGH003",
    "PLR0911", # Too many return statements
    "PLR0913", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
    "DTZ005",  # Without `tz` argument
    "C901",    # Too complex
    "S603",
    "S607",
    "B023",
    "B008",

]
target-version = "py310"

[tool.ruff.per-file-ignores]
"src/transformer_learning/transformer.py" = ["N803"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
